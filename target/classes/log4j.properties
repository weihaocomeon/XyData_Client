##进行配置  log4的根目录 格式 输出级别,输出地址一,输出地址二

###输出级别从大到小依次为 FATAL ERROR WARN INFO DEBUG

###输出目的地可以有: console(控制台)
###org.apache.log4j.ConsoleAppender（控制台），
###org.apache.log4j.FileAppender（文件），
###org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件），
###org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件），
###org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）

##输出布局(四种)
### org.apache.log4j.HTMLLayout（以HTML表格形式布局）
### org.apache.log4j.PatternLayout（可以灵活地指定布局模式，就是可以自定义输出样式），
### org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），
### org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）
###log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout   自定义布局
###以下是自定义布局的详解
###log4j.appender.CONSOLE.layout.ConversionPattern=%d{MM-ddHH:mm:ss}[%c-%L][%t][%-4r] - %m%n    -------这个就是针对PatternLayou你自定义的输


log4j.rootLogger=INFO, CONSOLE, LogFile, ErrorFile 

##控制台的配置

###指定名称为CONSOLE的输出 的目的地为控制台输出
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender 

###自定义从生存和
log4j.appender.CONSOLE.layout=org.apache.log4j.SimpleLayout

##定义输出到文件 其中 到info级别的保存在一个文件 错误信息保存在另外一个文件

###每天产生一个文件
log4j.appender.LogFile = org.apache.log4j.DailyRollingFileAppender
log4j.appender.LogFile.Append = true
###输出info级别的日志
log4j.appender.LogFile.Threshold = INFO
##输出信息格式自定义
log4j.appender.LogFile.layout=org.apache.log4j.PatternLayout 
###详细格式
log4j.appender.LogFile.layout.ConversionPattern=%d{MM-dd-HH:mm:ss}[%L][%-4r] - %m%n  
###文件的位置
log4j.appender.LogFile.File=E://DYlog/Info.log  


##错误级别的保存在一个文件 错误信息保存在另外一个文件
log4j.appender.ErrorFile = org.apache.log4j.DailyRollingFileAppender
log4j.appender.ErrorFile.Append = true
###输出info级别的日志
log4j.appender.ErrorFile.Threshold =ERROR
##输出信息格式自定义
log4j.appender.ErrorFile.layout=org.apache.log4j.PatternLayout 
###详细格式
log4j.appender.ErrorFile.layout.ConversionPattern=%d{MM-dd-HH:mm:ss}[%L][%-4r] - %m%n  
###文件的位置
log4j.appender.ErrorFile.File=E://DYLog/ERROR.log  
